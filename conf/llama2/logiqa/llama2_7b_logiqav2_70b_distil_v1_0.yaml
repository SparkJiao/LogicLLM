hydra:
  run:
    dir: ./

train_file: logiqa-v2/train.txt
dev_file: logiqa-v2/dev.txt
test_file: logiqa-v2/test.txt

model:
  _target_: models.llama.LlamaForConditionalGeneration.from_pretrained
  torch_dtype:
    _target_: general_util.training_utils.return_torch_dtype
    dtype: bfloat16
  gradient_checkpointing: True
  pad_token_id: 0
  use_flash_attention_2: True


# Data loading
read_tensor_train:
  _target_: data.logic_form.ComposePromptGenerator
  read_func:
    _target_: data.logic_form.ChatMergeReader
    chat_file: openai-api-output/logiqav2-train-v1.1.full.qa.decompose.llama2.70b.chat.json
    original_reader:
      _target_: data.readers.LogiQAReaderV2
      return_dict: True
      flat_options: True
    skip_empty: True
    filter_correct: True
    _filter:
      _target_: data.logic_form.basic_filter
  template_id: 5
  instruction:
  few_shot_prompt:
  compose_keys: [ "context", "question", "option_list", "response" ]
  max_data_num: -1
  api_based: False
  service_based: False

dist_load_data_barrier: False

extended_vocab:

# Data collator
collator:
  _target_: data.reclor_prompt.ReClorRewardPairCollator
  tokenizer: ${model_name_or_path}
  max_seq_length: 2048
#  padding_side: "right"
  add_eos_token: True

# Dataloader
num_workers: 4
prefetch_factor: 2

# Wiki path pretrain v8.2
model_name_or_path: pretrained-models/Llama-2-7b-chat-hf
pretrain:

exp_name: llama2.7b.chat.70b-chat-distil.logiqav2.A100.w2.v1.0
exp_notes:
output_dir: experiments/${exp_name}  # Fix <pad token id>


do_train: True
evaluate_during_training: False

do_eval: True
eval_sub_path: checkpoint-100

# Training hyper-parameters
per_gpu_train_batch_size: 8
per_gpu_eval_batch_size: 1
learning_rate: 1e-5
#learning_rate: 5e-6
gradient_accumulation_steps: 1
weight_decay: 0.01
adam_epsilon: 1e-6
adam_betas: "(0.9, 0.98)"
#adam_betas: "(0.9, 0.999)"
#max_grad_norm: 0.0
max_grad_norm: 1.0
num_train_epochs: 5
max_steps: 0
warmup_proportion: 0.1
warmup_steps: 0

# Optimizer
optimizer:
use_nvlamb:
bit_training:

logging_steps: 5
save_steps: 500
save_best: False
eval_steps: 500
ddp_eval: True
no_cuda: False
seed: 42
local_rank: -1
fp16: True
fp16_opt_level: O1
fp16_bfloat16: True

# Prediction config
prediction_cfg:
  metric: "loss"
  measure: -1
  best_checkpoint:
  best_result:
eval_forward_fn:
  _target_: general_util.evaluator.DefaultForwardFn
post_process:
#  _target_: post_processors.reclor.MultiChoiceMetricFlatSaver
#  tokenizer: ${model_name_or_path}
#predict_dir: ${output_dir}/logiqav2_test_mc_0shot.v1.0

#dist_init:
#  _target_: general_util.dist_utils.setup_slurm_distributed


# fairscale.FullyShardedDP
fairscale_config:
  _target_: general_util.fsdp_utils.default_initialize
  fp16: ${fp16}
  reshard_after_forward: False
  move_grads_to_cpu: False
  move_params_to_cpu: False

# Deepspeed config
ds_cfg:
  train_micro_batch_size_per_gpu: ${per_gpu_train_batch_size}
  gradient_accumulation_steps: ${gradient_accumulation_steps}
  optimizer:
    type: AdamW
    params:
      lr: ${learning_rate}
      betas: [ 0.9, 0.95 ]
      eps: ${adam_epsilon}
      weight_decay: ${weight_decay}
  scheduler:
    type: WarmupDecayLR
    params:
      total_num_steps:
      warmup_max_lr: ${learning_rate}
      warmup_num_steps:
      warmup_type: linear
  gradient_clipping: ${max_grad_norm}
  #  fp16:
  #    enabled: ${fp16}
  #    initial_scale_power: 12
  bf16:
    enabled: ${fp16}
  zero_optimization:
    stage: 1
    contiguous_gradients: True
    overlap_comm: True
    reduce_scatter: True
    reduce_bucket_size: 5e8
    allgather_bucket_size: 5e8
    offload_optimizer:
      device: cpu
      pin_memory: True
  #    offload_param:
  #      device: cpu
  #      pin_memory: True
  #  activation_checkpointing:
  #    partition_activations: True
  #    cpu_checkpointing: True
  #    contiguous_memory_optimization: False
  #    number_checkpoints: False
  #    synchronize_checkpoint_boundary: False
  #    profile: False
  steps_per_print: 1024

summary_helper:
  _target_: general_util.tensorboard_helper.WandbWriter
  batch_index_or_keys:
  #    "train/pair_value_num": pair_value_num
  #    "train/pair_label_num": pair_label_num
  #    "train/dropped_op_cnt": dropped_op_cnt
  #    "train/invalid_path": invalid_path
  outputs_index_or_keys:
#    "train/lm_loss": mlm_loss
#    "train/reward_loss": reward_loss

# Temporary variables
n_gpu:
device:
train_batch_size:
eval_batch_size:
world_size:
